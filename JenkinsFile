def GIT_CREDENTIAL_ID = "82aa1de0-eeca-4252-8d86-074bb8a684f0"
def PROJECT_USER = "svc-prj-argo"
def PROJECT_NAME = "argo"

    node("jenkins-slave-argo"){

        stage("get third parties and source code"){
            withCredentials([usernamePassword(credentialsId: 'github-solarBcom', passwordVariable: 'PASSWORD_GITHUB', usernameVariable: 'USER_GITHUB')]) {
                env.USER_GITHUB = "${USER_GITHUB}"
                env.PASSWORD_GITHUB = "${PASSWORD_GITHUB}"
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    mkdir -p /home/jenkins/BCOMDEVROOT
                    mkdir -p /home/jenkins/BCOMDEVROOT/linux
                    mkdir -p tools
                    mkdir -p SolAR
                    git clone https://github.com/b-com-software-basis/builddefs-qmake.git $BCOMDEVROOT/builddefs/qmake
                    cd tools
                    curl -L https://raw.githubusercontent.com/SolarFramework/binaries/master/packagedependencies.txt -o packagedependencies.txt
                    curl -L https://github.com/SolarFramework/binaries/releases/download/pkgm-bcom%2F1.0.0%2Fmulti/pkgm-1.0.0-fat.jar -o pkgm-1.0.0-fat.jar
                    java -jar pkgm-1.0.0-fat.jar install -a x86_64 -c release -m shared -f packagedependencies.txt 
                    cd ..
                    cd SolAR
                    git clone https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/build-scripts.git
                    chmod +x build-scripts/*.sh
                    git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/SolARFramework.git
					mkdir -p Modules
					cd Modules
                    git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/SolARModuleOpenCV.git
                    git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/SolARModuleTools.git
					git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/SolARModuleOpenGL.git
                    cd ..
					mkdir -p Samples
                    cd Samples
                    git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/NaturalImageMarker.git
                    git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/FiducialMarker.git
					git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/Sample-Triangulation.git
					git clone -b develop https://$USER_GITHUB:$PASSWORD_GITHUB@github.com/SolarFramework/Sample-Slam.git
                    cd ..                    
                '''

            }

        }

        stage("build SolARFramework"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release framework
                '''
            }
        }

        stage("build SolARModuleOpenCV"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release moduleopencv
                '''
            }
        }
        
        stage("build SolARModuleOpenCV Tests"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release moduleopencvtests
                '''
            }
        }
        
         stage("build/run Unit tests"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    export LD_LIBRARY_PATH=./:$BCOMDEVROOT/bcomBuild/SolARFramework/1.0.0/lib/x86_64/shared/release/:$BCOMDEVROOT/bcomBuild/xpcf/1.0.0/lib/x86_64/shared/release/:$BCOMDEVROOT/thirdParties/opencv/3.2.0/lib/x86_64/shared/release/:$BCOMDEVROOT/thirdParties/boost/1.64.0/lib/x86_64/shared/release/:$LD_LIBRARY_PATH
                    export XPCF_REGISTRY_PATH=$BCOMDEVROOT/bcomBuild/SolARModuleOpenCV/1.0.0/xpcf_jenkins_registry.xml
                    cd SolAR
                    ./build-scripts/solarbuild.sh release unittests
                '''
            }
            junit 'tests/*.xml'
        }

       stage("build SolARModuleTools"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release moduletools
                '''
            }
        }
		
		stage("build SolARModuleOpenGL"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release moduleopengl
                '''
            }
        }

        
        stage("build Fiducial Marker Sample"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release fiducialmarkersample
                '''
            }
        }
        
        stage("build Natural Image Marker Sample"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release naturalimagemarkersample
                '''
            }
        }
		
		stage("build Triangulation Sample"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release triangulationsample
                '''
            }
        }
		
		stage("build Slam Sample"){
            sshagent(['82aa1de0-eeca-4252-8d86-074bb8a684f0']) {
                sh '''
                    set -e
                    export QT_SELECT=qt5
                    export BCOMDEVROOT=/home/jenkins/BCOMDEVROOT/linux
                    export GIT_SSH_COMMAND="ssh -oStrictHostKeyChecking=no"
                    cd SolAR
                    ./build-scripts/solarbuild.sh release slamsample
                '''
            }
        }
    }
